## Autogenerated by Scribe. DO NOT MODIFY.

name: Comment
description: |-

  APIs for comment management
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/comments
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the list of comments'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"content":null,"createdAt":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments/paginate
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginate listing of the comment resources.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"content":null,"createdAt":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Store Comment'
      description: 'Store a newly created resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The ID of the post that the comment belongs to. The <code>id</code> of an existing record in the posts table.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the comment. Must not be greater than 255 characters.'
        required: true
        example: 'This is a comment.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user who created the comment. The <code>id</code> of an existing record in the users table.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      post_id: '1'
      content: 'This is a comment.'
      user_id: '1'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"content":null,"createdAt":null}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: '{"message": "Comment created successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: voluptatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":null,"content":null,"createdAt":null}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Comment'
      description: 'Update the specified resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_id:
        name: post_id
        description: 'The ID of the post that the comment belongs to. The <code>id</code> of an existing record in the posts table.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: 'The content of the comment. Must not be greater than 255 characters.'
        required: true
        example: 'This is a comment.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user who created the comment. The <code>id</code> of an existing record in the users table.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      post_id: '1'
      content: 'This is a comment.'
      user_id: '1'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Comment updated successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: Comment
      groupDescription: |-

        APIs for comment management
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{"message": "Comment deleted successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
