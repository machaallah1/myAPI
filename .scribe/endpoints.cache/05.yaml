## Autogenerated by Scribe. DO NOT MODIFY.

name: Tag
description: |2-

   APIs for tag management
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tags
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the list of tags.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":9,"name":"ratione","slug":"deserunt-porro-ut-doloribus","createdAt":{"datetime":"2025-02-24T15:19:00.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:19 PM"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tags/paginate
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginate listing of the tag resources.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":10,"name":"sequi","slug":"voluptatem-amet-enim-aperiam-aspernatur-saepe-dolor-saepe","createdAt":{"datetime":"2025-02-24T15:19:00.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:19 PM"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tags
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Store tag'
      description: 'Store a newly created resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tag. Must not be greater than 255 characters.'
        required: true
        example: 'Tag Name'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the tag. Must not be greater than 255 characters.'
        required: true
        example: tag-slug
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Tag Name'
      slug: tag-slug
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"labore","slug":"perspiciatis-consequuntur-hic-assumenda-consectetur-nihil","createdAt":{"datetime":"2025-02-24T15:19:00.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:19 PM"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: '{"message": "Tag created successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":12,"name":"rerum","slug":"reiciendis-fuga-culpa-accusamus-voluptas-rerum","createdAt":{"datetime":"2025-02-24T15:19:00.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:19 PM"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Update tag'
      description: 'Update the specified resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: itaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tag. Must not be greater than 255 characters.'
        required: true
        example: 'Tag Name'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the tag. Must not be greater than 255 characters.'
        required: true
        example: tag-slug
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Tag Name'
      slug: tag-slug
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Tag updated successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Tag deleted successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
