name: Tag
description: |2-

   APIs for tag management
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tags
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the list of tags.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":23,"name":"sed","slug":"exercitationem-tempore-modi-rerum-maxime-consequatur-a-voluptas","createdAt":"2024-11-12T21:52:34.000000Z","updatedAt":"2024-11-12T21:52:34.000000Z"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tags/paginate
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginate listing of the tag resources.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":24,"name":"ut","slug":"aut-repudiandae-occaecati-doloribus-autem","createdAt":"2024-11-12T21:52:34.000000Z","updatedAt":"2024-11-12T21:52:34.000000Z"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tags
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Store tag'
      description: 'Store a newly created resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tag. Must not be greater than 255 characters.'
        required: true
        example: 'Tag Name'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the tag. Must not be greater than 255 characters.'
        required: true
        example: tag-slug
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Tag Name'
      slug: tag-slug
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":25,"name":"natus","slug":"velit-ut-placeat-ullam-vel","createdAt":"2024-11-12T21:52:35.000000Z","updatedAt":"2024-11-12T21:52:35.000000Z"}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: '{"message": "Tag created successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":26,"name":"sint","slug":"ut-temporibus-eaque-nisi-pariatur-quis","createdAt":"2024-11-12T21:52:35.000000Z","updatedAt":"2024-11-12T21:52:35.000000Z"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Update tag'
      description: 'Update the specified resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: eum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tag. Must not be greater than 255 characters.'
        required: true
        example: 'Tag Name'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the tag. Must not be greater than 255 characters.'
        required: true
        example: tag-slug
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Tag Name'
      slug: tag-slug
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Tag updated successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tags/{id}'
    metadata:
      groupName: Tag
      groupDescription: |2-

         APIs for tag management
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: reiciendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Tag deleted successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
