name: Category
description: |-

  APIs for category management
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Category
      groupDescription: |-

        APIs for category management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the list of categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":43,"name":"sunt","slug":"eius-eos-est-modi-blanditiis","createdAt":{"datetime":"2025-02-24T15:18:58.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:18 PM"},"image":"","thumbnail":"","updatedAt":"2025-02-24T15:18:58.000000Z"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories/paginate
    metadata:
      groupName: Category
      groupDescription: |-

        APIs for category management
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginate listing of the category resources.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":44,"name":"ut","slug":"molestias-qui-et-officia-ducimus-harum","createdAt":{"datetime":"2025-02-24T15:18:59.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:18 PM"},"image":"","thumbnail":"","updatedAt":"2025-02-24T15:18:59.000000Z"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Category
      groupDescription: |-

        APIs for category management
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: recusandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Category] recusandae"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories
    metadata:
      groupName: Category
      groupDescription: |-

        APIs for category management
      subgroup: ''
      subgroupDescription: ''
      title: 'Store Category'
      description: 'Store a newly created resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category. Must not be greater than 255 characters.'
        required: true
        example: Electronics
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the category. Must not be greater than 255 characters.'
        required: true
        example: electronics
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'The image of the category. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Electronics
      slug: electronics
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: '{"id":45,"name":"aut","slug":"corrupti-hic-quia-suscipit-perferendis-et-esse-veritatis","createdAt":{"datetime":"2025-02-24T15:18:59.000000Z","humanDiff":"0 seconds ago","human":"Mon, Feb 24, 2025 3:18 PM"},"image":"","thumbnail":"","updatedAt":"2025-02-24T15:18:59.000000Z"}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: '{"message": "Category created successfully."}'
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Category
      groupDescription: |-

        APIs for category management
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Category'
      description: 'Update the specified resource in storage.'
      authenticated: false
      custom: []
    headers:
      Accept-Language: en
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the category. Must not be greater than 255 characters.'
        required: true
        example: Electronics
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug of the category. Must not be greater than 255 characters.'
        required: true
        example: electronics
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'The image of the category. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Electronics
      slug: electronics
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "message":"Category updated successfully"
          }
        headers: []
        description: Updated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
